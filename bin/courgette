#!/usr/bin/env perl

use lib qw{ lib };

use Error qw( :try );

$Error::Debug = 1;

use Courgette;
use Courgette::Feature;
use Courgette::Step;
use Courgette::Display::PlainConsole;

use Getopt::Long qw( GetOptionsFromArray );
use Data::Dumper;
use Cwd 'abs_path';
use Pod::Usage;

$verbosity = 0;

sub parse_args {
  my @args = @_;
  my @files;

  my( $help, $verbose, $debug );
  my( $ret, $files ) = GetOptionsFromArray(
    \@args,
    'h|help'    => \$help,
    'v|verbose' => \$verbose,
    'd|debug'   => \$debug
  ) or pod2usage( 1 );

  pod2usage( 0 ) if( $help );

  $Courgette::verbosity = 1 if( $verbose );
  $Courgette::verbosity = 2 if( $debug );

  return @args;
}


sub run_step {
  my $step_name = shift;
  my $world = shift;

  Courgette::verbose( "Running step: " . $step_name );

  my( $step, $params ) = Courgette::Step->find( $step_name );
  if ( $step ) {
    try {
      local $Data::Dumper::Indent = 0;
      Courgette::debug( Data::Dumper->Dump( [ $world ], [ qw( *Courgette::World ) ] ) );
      $step->run( $world, @$params );
    } catch Error with {
      my $err = shift;

      $display->step_failed( $step_name, $err );
      exit( 2 );
    };
  } else {
    $display->step_missing( $step_name );
    exit( 2 );
  }
}


sub run {
  my @args = @_;
  my @stories = parse_args( @args );

  $display = Courgette::Display::PlainConsole->new;

  # ToDo: the path to the steps dir should be set through a policy or a
  #       configuration point, not hard-coded here.
  push( @Courgette::steps_paths, abs_path( 'steps' ) );

  Courgette::load_steps;

  foreach $filename ( @stories ) {
    my @features = Courgette::Feature->load_from_file( $filename );

    foreach my $feature ( @features ) {

      $display->feature( $feature->{ name } );
      foreach my $description_line ( @{ $feature->{ description } } ) {
	$display->description( $description_line );
      }

      foreach my $scenario ( @{ $feature->{ scenarios } } ) {
	Courgette::verbose( "Running scenario: " . $scenario->{ name } );

	my $world = Courgette::World->new;

	foreach my $given_step ( @{ $scenario->{ given } } ) {
	  run_step( $given_step, $world );
	}
	foreach my $when_step ( @{ $scenario->{ when } } ) {
	  run_step( $when_step, $world );
	}
	foreach my $then_step ( @{ $scenario->{ then } } ) {
	  run_step( $then_step, $world );
	}

      }

    }

  }

}

# Hook up our runner here.
if( __PACKAGE__ eq 'main' ) {
  run( @ARGV );
}

__END__

=head1 NAME

courgette - Run feature tests.

=head1 SYNOPSIS

courgette [options] [feature_file | feature_dir]

=head1 OPTIONS

=over 8

=item B<--help>

Display help information.


